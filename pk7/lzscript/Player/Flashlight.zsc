// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Alison G. Watson. Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_SpotLight : DynamicLight {
   default {
      DynamicLight.Type "Point";
      +DynamicLight.Attenuate
      +DynamicLight.Spot
   }
}

extend class Lith_Player;

Lith_SpotLight[2] m_light;

void tickFlashlight() {
   double intn = acs_scriptCall("Lith_GetFlashlightIntensity") / FIX;
   int r = clamp(lith_light_r, 0, 255);
   int g = clamp(lith_light_g, 0, 255);
   int b = clamp(lith_light_b, 0, 255);
   int ri = int(lith_light_radius * intn);
   int ro = ri / 2;
   m_light[0].args[DynamicLight.LIGHT_RED]       = r;
   m_light[0].args[DynamicLight.LIGHT_GREEN]     = g;
   m_light[0].args[DynamicLight.LIGHT_BLUE]      = b;
   m_light[0].args[DynamicLight.LIGHT_INTENSITY] = ri;
   m_light[0].spotInnerAngle = 0;
   m_light[0].spotOuterAngle = 20;
   m_light[1].args[DynamicLight.LIGHT_RED]       = int(r * 0.77);
   m_light[1].args[DynamicLight.LIGHT_GREEN]     = int(g * 0.77);
   m_light[1].args[DynamicLight.LIGHT_BLUE]      = int(b * 0.77);
   m_light[1].args[DynamicLight.LIGHT_INTENSITY] = ro;
   m_light[1].spotInnerAngle = 15;
   m_light[1].spotOuterAngle = 45;
   foreach(li : m_light) {
      li.a_setAngle(angle, true);
      li.a_setPitch(pitch, true);
      li.setOrigin((pos.xy, player.viewz), true);
   }
}

/* EOF */
