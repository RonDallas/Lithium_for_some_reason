// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Alison G. Watson. Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_CasingSmoke : Actor {
   default {
      RenderStyle "Add";
      Alpha 0.6;
      Scale 0.02;
      +NOINTERACTION
      +NOTELEPORT
      +THRUACTORS
      +DROPOFF
      +FLOORCLIP
      +FORCEXYBILLBOARD
   }

   override void tick() {
      Lith_UTIL.stateTick(self);
   }

   states {
   Spawn:
      #ESM C random(2, 5);
      #ESM DEFGH 4 A_FadeOut(FRandom(0.05, 0.15));
      stop;
   }
}

class Lith_CasShell : Lith_CasingBase {
   default {
      Scale 0.26;
      BounceFactor 0.5;
      WallBounceFactor 0.4;
      BounceCount 5;
      BounceSound "casings/shell/bounce";
   }

   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("casings/shell/die");
   }

   states {
   Spawn:
      SCAS AABBCCDDEEFFGGHH 1;
      loop;
   Death:
      SCAS I 0 {
         A_StartSound("casings/shell/die", lch_body);
         frame += random(0, 5);
      }
      goto Done;
   }
}

class Lith_CasShellHot : Lith_CasShell {
   states {
   Spawn:
      TNT1 A 0;
      SCAS AABBCCDDEEFFGGHH 1 lith_spawnSmoke(0,0,3, frandom(-0.2,0),frandom(-0.2,0));
   Spawn2:
      SCAS ABCDEFGH 1;
      loop;
   }
}

class Lith_CasSmall : Lith_CasingBase {
   default {
      Scale 0.11;
      BounceFactor 0.5;
      WallBounceFactor 0.4;
      BounceCount 4;
      BounceSound "casings/bullet/bounce";
   }

   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("casings/bullet/die");
   }

   states {
   Spawn:
      BCAS ABCDEFGH 1;
      loop;
   Death:
      BCAS A 0 {
         A_StartSound("casings/bullet/die", lch_body);
         switch(random(0, 3)) {
         case 0: frame = CH_U_K - CH_U_A; break;
         case 1: frame = CH_U_G - CH_U_A; break;
         case 2: frame = CH_U_I - CH_U_A; break;
         case 3: frame = CH_U_J - CH_U_A; break;
         }
      }
      goto Done;
   }
}

class Lith_CasSmallHot : Lith_CasSmall {
   states {
   Spawn:
      TNT1 A 0;
      BCAS ABCDEFGH 1 lith_spawnSmoke(0,0,3, frandom(-0.2,0),frandom(-0.2,0));
   Spawn2:
      BCAS ABCDEFGH 1;
      loop;
   }
}

class Lith_CasBig : Lith_CasingBase {
   default {
      Scale 0.11;
      BounceFactor 0.5;
      WallBounceFactor 0.4;
      BounceCount 4;
      BounceSound "casings/bullet/bounce";
   }

   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("casings/bullet/die");
   }

   states {
   Spawn:
      BBCA ABCDEFGH 1;
      loop;
   Death:
      #### # 0 {
         A_StartSound("casings/bullet/die", lch_body);
         frame = random(0, 1) ? CH_U_C - CH_U_A : CH_U_G - CH_U_A;
      }
      goto Done;
   }
}

class Lith_CasBigHot : Lith_CasBig {
   states {
   Spawn:
      TNT1 A 0;
      BBCA ABCDEFGH 1 lith_spawnSmoke(0, 0, 3);
      loop;
   }
}

class Lith_Cas700e : Lith_CasBig {
   states {
   Spawn:
      B7CA ABCDEFGH 1;
      loop;
   }
}

class Lith_Cas4Bore : Lith_CasShell {
   default {
      Scale 0.34;
      +RollSprite
   }
   override void markPrecacheSounds() {
      super.markPrecacheSounds();
      markSound("casings/shell/die");
   }
   states {
   Spawn:
      #### # 0 a_setRoll(roll + 90);
      S4CA A 1 {
         a_setRoll(roll + 5, SPF_INTERPOLATE);
         lith_spawnSmoke(0, 0, 3);
      }
      wait;
   Death:
      S4CA A 0 {
         roll = roll % 360 < 180 ? 90 : 270;
         A_StartSound("casings/shell/die", lch_body);
      }
      goto Done;
   }
}

class Lith_CasingBase : Actor;

default {
   BounceType "Doom";
   Radius 3;
   Height 3;
   +MISSILE
   +NOTELEPORT
   +THRUACTORS
   +DROPOFF
   +FLOORCLIP
   +FORCEXYBILLBOARD
   +CastSpriteShadow
}

bool m_lessparticles;

override void postBeginPlay() {
   super.postBeginPlay();
   if(!lith_weapons_casings) {
      destroy();
   } else {
      m_lessparticles = lith_sv_lessparticles;
   }
}

void lith_spawnSmoke(double x, double y, double z, double xv = 0, double yv = 0, double zv = 0) {
   if(m_lessparticles) return;
   let mo = spawn("Lith_CasingSmoke", pos + (x, y, z));
   mo.vel = (xv, yv, zv);
}

states {
Done:
   #### # -1 A_JumpIf(lith_weapons_casingfadeout, "DoneFade");
   stop;
DoneFade:
   #### # 300;
   #### # 1 A_FadeOut;
   wait;
}

/* EOF */
