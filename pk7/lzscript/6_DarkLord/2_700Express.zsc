// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Alison G. Watson. Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_700Laser : Actor {
   default {
      Scale 0.25;
      Alpha 0.5;
      RenderStyle "Translucent";
      ClearFlags;
      +NoInteraction
      +Bright
      +ForceXyBillboard
      +NoTimeFreeze
   }

   states {
   Spawn:
      #ELA A 2;
      #ELA A 1 A_FadeOut;
      wait;
   }
}

class Lith_700Laser2 : Lith_700Laser {
   default {
      Alpha 0.2;
   }
}

class Lith_700Laser3 : Lith_700Laser {
   states {
   Spawn:
      #ELA A -1;
      stop;
   }
}

class Lith_700Express : Lith_DWeapon;

default {
   Lith_Weapon.SpawnType "Lith_PistolPickup";
   Lith_Weapon.MagSize 4;
   Tag "$LITH_INFO_SHORT_700Express";
   Weapon.SlotNumber 2;
   Weapon.SlotPriority 1;
   Weapon.UpSound "weapons/700e/draw";
   +Weapon.NoAutoFire
}

Actor[10] m_laser;
bool m_doLaser;

override void tick() {
   super.tick();
   vector3 beg, end; [beg, end] = lith_getLaserPos(0.0);
   for(int i = 0; i < m_laser.size(); i++) {
      if(!owner || owner.player.readyWeapon != self) {
         if(m_laser[i]) {
            m_laser[i].destroy();
         }
      } else if(m_doLaser) {
         if(!m_laser[i]) {
            m_laser[i] = Spawn("Lith_700Laser3", lith_lerpLaserPos(beg, end, i));
         }
         m_laser[i].alpha = 0.2 / (i + 1);
      } else if(m_laser[i]) {
         m_laser[i].alpha = 0.0;
      }
   }
   m_doLaser = false;
}

action(Weapon) void lith_fire700e() {
   Lith_A_RecoilUp(2.5);
   lith_gunFlash();
   soundAlert(invoker.owner);
   A_Recoil(1.5);
   A_Quake(2, 3, 0, 128);
   Lith_FireBullets(0, 0, -1, random[lith_dlweapon](60, 102), FBF_NORANDOM, "Lith_700Bullet", 4, tracer: _tr_slow);
   A_FireProjectile("Lith_LightProjectileRedShort", 0);
   for(int i = 1; i <= 3; i++) {
      Lith_A_GunSmoke(7, 3 * i);
   }
   A_StartSound("weapons/700e/fire", lch_weapon, pitch: FRandom(0.9, 1.0));
}

vector3, vector3 lith_getLaserPos(double pit) {
   let ply = Lith_Player(owner);
   let sz  = ply.player.viewz - ply.pos.z - 3;
   let ps = sin(ply.pitch - pit - 90);
   let cz = cos(ply.pitch - pit - 90);
   let ys = sin(ply.angle - 15);
   let yc = cos(ply.angle - 15);
   let cx = ps * yc;
   let cy = ps * ys;
   let beg = (ply.pos.x      + cx * -16,
              ply.pos.y      + cy * -16,
              ply.pos.z + sz + cz * -16);
   ys = sin(ply.angle);
   yc = cos(ply.angle);
   cx = ps * yc;
   cy = ps * ys;
   let end = (beg.X + cx * -32,
              beg.Y + cy * -32,
              beg.Z + cz * -32);
   return beg, end;
}

vector3 lith_lerpLaserPos(vector3 beg, vector3 end, int i) {
   return Lith_UTIL.Vec3Lerp(beg, end, i / 10.0);
}

void lith_moveLaser(double pit) {
   if(!owner) return;
   m_doLaser = true;
   vector3 beg, end; [beg, end] = lith_getLaserPos(pit);
   for(int i = 0; i < m_laser.size(); i++) {
      if(m_laser[i]) {
         m_laser[i].setOrigin(lith_lerpLaserPos(beg, end, i), true);
      }
   }
}

void lith_spawnLaserTrace(double pit) {
   let ply = Lith_Player(owner);
   if(!ply) return;
   let sz  = ply.player.viewz - ply.pos.z;
   let loc = Lith_UTIL.TraceFrom(ply, ply.m_iyaw, ply.m_ipitch - pit, 2048, sz);
   Spawn("Lith_700Laser", loc);
   loc = Lith_UTIL.TraceFrom(ply, ply.angle, ply.pitch - pit, 2048, sz);
   Spawn("Lith_700Laser2", loc);

}

action(Weapon) void lith_laser(double pit) {
   invoker.lith_spawnLaserTrace(pit);
   invoker.lith_moveLaser(pit);
}

states(Weapon) {
Ready:
   700E A 0 lith_laser(0.0);
   700E A 1 Lith_A_Ready(WRF_ALLOWRELOAD);
   loop;
Deselect:
   700E A 1 Lith_A_Lower(_raise_fast);
   wait;
Select:
   700E A 1 Lith_A_Raise(_raise_fast);
   wait;
Fire:
   #### # 0 Lith_A_JumpIfMagEmpty;
   #### # 0 Lith_A_MagIncr;
   700E Y 1 bright {
      lith_fire700e();
      lith_laser(22.0);
   }
   700E Z 1 bright offset(10, 28) lith_laser(16.0);
   700E CCC 1 bright lith_laser(9.0);
   700E CC 1 offset(9, 28) {
      lith_a_setInterpolation(true);
      lith_laser(8.0);
   }
   700E C 1 offset(7, 30) lith_laser(7.0);
   700E C 1 offset(5, 31) lith_laser(6.0);
   700E C 1 offset(4, 31) lith_laser(6.0);
   700E C 1 offset(3, 32) lith_laser(6.5);
   700E BBB 1 offset(2, 32) lith_laser(5.0);
   700E BBB 1 offset(1, 32) lith_laser(5.0);
   700E A 1 lith_laser(0.0);
   700E A 1 lith_laser(0.0);
   700E A 1 offset(0, 32) lith_laser(0.0);
   700E A 1 offset(0, 32) {
      lith_laser(0.0);
      lith_a_setInterpolation(false);
   }
   goto ReadySelector;
FireEmpty:
   700E A 1 lith_laser(0.0);
   700E AA 1 offset(3, 38) lith_laser(0.0);
   700E A 1 offset(7, 40) lith_laser(0.0);
   700E A 1 offset(5, 37) {
      A_StartSound("weapons/spas/empty", lch_dryweapon);
      lith_laser(0.0);
   }
   700E A 1 offset(4, 34) lith_laser(0.0);
   700E A 1 offset(2, 33) lith_laser(0.0);
   700E AAAAA 1 offset(1, 32) lith_laser(0.0);
   goto ReadySelector;
Reload:
   #### # 0 Lith_A_JumpIfMagFull;
   700E B 1 lith_a_setInterpolation(true);
   700E B 1 offset(2, 31) A_StartSound("weapons/700e/move", lch_reload);
   700E C 1 offset(1, 32) Lith_A_ReloadBobUp(0.5);
   700E C 1 offset(3, 32) Lith_A_ReloadBobUp(0.5);
   700E C 2 offset(4, 33) Lith_A_ReloadBobUp(0.5);
   700E C 5 offset(5, 34) Lith_A_ReloadBobUp(0.5);
   700E C 2 offset(2, 38);
   700E D 1 offset(3, 32) A_StartSound("weapons/700e/out", lch_reload2);
   700E D 1 offset(1, 32);
   700E D 1 offset(-1, 32) Lith_A_ReloadBobDn(0.25);
   700E E 1 offset(-1, 32) Lith_A_ReloadBobDn(0.25);
   700E E 1 offset(-2, 32) Lith_A_ReloadBobDn(0.25);
   700E F 1 offset(-3, 40);
   700E F 1 offset(-4, 54) {
      a_startSound("weapons/700e/cout", lch_dryweapon);
      for(int i = 0; i < invoker.m_Fired; i++)
         Lith_A_Casing("Lith_Cas700e", 10, frandom(1,2), 32, frandom(1,2), frandom(1,3), 0);
   }
   700E F 1 offset(-9, 68) lith_a_setInterpolation(false);
   TNT1 AAAA 6 {
      if(!invoker.m_Fired) {
         return ResolveState("ReloadDone");
      } else {
         lith_a_reloadBobDn(0.1);
         a_startSound("weapons/700e/bin", lch_reload, pitch: FRandom(0.9, 1.1));
         invoker.m_Fired--;
         return State(null);
      }
   }
ReloadDone:
   TNT1 A 2 Lith_A_ReloadFinish;
   700E C 1 offset(-35, 100);
   700E C 1 offset(-20, 90) {
      A_StartSound("weapons/700e/in", lch_reload2);
      Lith_A_ReloadBobUp(2);
      lith_a_setInterpolation(true);
   }
   700E C 1 offset(-10, 60);
   700E C 3 offset(-7, 40);
   700E C 3 offset(-5, 36);
   700E C 2 offset(-2, 34);
   700E B 3 offset(1, 32) lith_a_setInterpolation(false);
   goto ReadySelector;
}

/* EOF */
