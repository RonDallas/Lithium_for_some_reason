// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Alison G. Watson. Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_RemsSparkSpawner : Actor {
   default {
      Radius 4;
      Height 4;
      Speed 7;
      Damage 0;

      Projectile;
      +THRUACTORS
      +NOCLIP
   }

   states
   {
   Spawn:
      TNT1 A 1;
   Death:
      TNT1 A 0 {
         for(int i = 0, j = Random(11, 13); i < j; i++)
            A_SpawnParticle("Purple", SPF_FULLBRIGHT|SPF_RELATIVE, Random(3, 8), Random(1, 2), fRandom(-15, 15), fRandom(-1,1),fRandom(-1,1),fRandom(-1,1), fRandom(1, 16),fRandom(-0.1, 0.1),(Vel.Z*1.5)+fRandom(-1,1), 0.0, 0.0, -0.05, 0.98, -1);
      }
      stop;
   }
}

class Lith_RemsBulletTrail : Actor {
   default {
      RenderStyle "Add";
      Scale 0.1;
      Alpha 0.5;
      +NoInteraction
   }
   states {
   Spawn:
      BLLT Y 5;
      stop;
   }
}

class Lith_RemsBullet : FastProjectile {
   default {
      RenderStyle "Add";
      Radius 5;
      Height 5;
      DamageFunction 34;
      DamageType "Electric";
      Speed 100;
      MissileType "Lith_RemsBulletTrail";
      MissileHeight 8;
      +ForcePain
      +FlatSprite
      +Bright
   }

   states {
   Spawn:
      REMS X 0;
   SpawnLoop:
      #### # 1 light("Lith_RemsLight1") bright {
         a_spawnParticle("Purple", SPF_FULLBRIGHT, 15, 4, 0, fRandom(-5, 5),fRandom(-5, 5),fRandom(-5, 5), fRandom(-5, 5),fRandom(-5, 5),fRandom(-5, 5));
      }
      loop;
   Death:
      BLLT Y 0 {
         a_startSound("weapons/shotgun/gauss/puff", lch_body, volume: 0.2);
         a_setScale(0.5);
         bFlatSprite = false;
      }
      BLLT YYYY 2 light("Lith_RemsLight2") bright a_fadeOut;
      stop;
   }
}

class Lith_Rems : Lith_DWeapon;

default {
   Lith_Weapon.SpawnType "Lith_BFG9000Pickup";
   Tag "$LITH_INFO_SHORT_Rems";
   Weapon.SlotNumber 7;
   Weapon.SlotPriority 1;
   Weapon.UpSound "weapons/rems/draw";
   Lith_Weapon.AmmoType "Lith_CannonAmmo";
   Inventory.AltHudIcon "REMSZ0";
   +Weapon.NoAutoFire
}

override void tick() {
   super.tick();
   if(owner) {
      for(int i = 0; i < m_particleLoop; ++i) {
         owner.a_overlayOffset(_psp_rems_particle_first + i, fRandom(-16, 16), fRandom(-16, 16), WOF_INTERPOLATE|WOF_ADD);
      }
   }
}

action(weapon) void lith_a_decreaseParticles() {
   invoker.m_particleAlpha -= 0.2;
   if(invoker.m_particleAlpha < 0) {
      return;
   }
   for(int i = 0; i < invoker.m_particleLoop; ++i) {
      a_overlayAlpha(_psp_rems_particle_first + i, invoker.m_particleAlpha);
   }
}

int m_steamy, m_fireLoop, m_particleLoop;
double m_particleAlpha;

states(Weapon) {
Ready:
   REMS A 0 {
      if(invoker.m_steamy) {
         if(level.time % 3 == 0) {
            a_fireProjectile("Lith_GunSmokeEmitter", frandom(-10, 10), 0, 1.5, 9, pitch: frandom(-10, 10));
         }
         invoker.m_steamy--;
      }
   }
   REMS A 1 Lith_A_Ready;
   loop;

Deselect:
   REMS A 1 Lith_A_Lower(_raise_slow);
   wait;

Select:
   REMS A 0 { invoker.m_steamy = 0; }
   REMS A 1 Lith_A_Raise(_raise_slow);
   wait;

RemsParticle:
   BLLT Y -1 bright;
   stop;
Fire:
   #### # 0 lith_jumpNoAmmo(4);
   REMS A 1 offset(0, 32) {
      lith_takeAmmo(4);
      a_startSound("weapons/rems/charge", lch_weapon2);
      a_startSound("weapons/rems/wail", lch_weapon3);
      invoker.m_particleLoop = 0;
      invoker.m_particleAlpha = 1.0;
      invoker.m_fireLoop = 0;
      invoker.m_steamy = 175;
   }
   REMS AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 {
      a_overlayOffset(_psp_weapon, fRandom(-0.4, 0.6), fRandom(-0.4, 0.6), WOF_INTERPOLATE|WOF_ADD);
      a_overlay(_psp_rems_particle_first + invoker.m_particleLoop, "RemsParticle");
      a_overlayFlags(_psp_rems_particle_first + invoker.m_particleLoop, PSPF_ALPHA|PSPF_RENDERSTYLE|PSPF_FORCESTYLE, true);
      a_overlayFlags(_psp_rems_particle_first + invoker.m_particleLoop, PSPF_ADDWEAPON|PSPF_ADDBOB, false);
      a_overlayRenderStyle(_psp_rems_particle_first + invoker.m_particleLoop, STYLE_Add);
      a_overlayScale(_psp_rems_particle_first + invoker.m_particleLoop, fRandom(0.1, 0.5));
      a_overlayOffset(_psp_rems_particle_first + invoker.m_particleLoop, fRandom(0, 320), fRandom(120, 240));
      ++invoker.m_particleLoop;
   }
   REMS A 0 a_startSound("weapons/rems/fire", lch_weapon);
FireLoop:
   REMS BC 1 bright {
      a_overlayOffset(_psp_weapon, fRandom(-9, 47), fRandom(44, 64), WOF_INTERPOLATE);
      for(int i = 0; i < 4; ++i) {
         a_fireProjectile("Lith_RemsBullet", angle: fRandom(-20, 20), spawnofs_xy: fRandom(2, 8), spawnheight: fRandom(8, 10), flags: FPF_NOAUTOAIM, pitch: fRandom(-4, 4));
      }
      Lith_GunSmoke("Lith_RemsSparkSpawner", 2, 8);
      A_Recoil(0.4);
      lith_gunFlash();
      soundAlert(invoker.owner);
      A_Quake(2, 15, 0, 128);
      Lith_A_RecoilUp(fRandom(-0.2, 0.8));
      return invoker.m_fireLoop++ == 170 ? resolveState("FireDone") : state(null);
   }
   loop;
FireDone:
   REMS D 1 bright offset(14, 44) a_startSound("weapons/rems/firefinish", lch_weapon2);
   REMS A 1 bright offset(12, 40) lith_a_decreaseParticles;
   REMS A 1 bright offset(8, 38) {
      lith_a_decreaseParticles();
      lith_a_setInterpolation(true);
   }
   REMS A 1 offset(4, 39) lith_a_decreaseParticles;
   REMS AA 1 offset(2, 35) lith_a_decreaseParticles;
   REMS A 1 offset(1, 33) {
      a_clearOverlays(_psp_rems_particle_first, _psp_rems_particle_last);
      invoker.m_particleLoop = 0;
   }
   #### # 2 offset(1, 32) Lith_A_RecoilDn(0.25);
   #### # 2 offset(3, 32) Lith_A_RecoilDn(0.25);
   #### # 2 offset(4, 32) Lith_A_RecoilDn(0.25);
   #### # 2 offset(8, 38) Lith_A_RecoilDn(0.25);
   #### # 2 offset(12, 45);
   #### # 2 offset(16, 53);
   #### # 1 offset(19, 60);
   #### # 1 offset(21, 64);
   #### # 1 offset(23, 67);
   #### # 0 Lith_A_ReloadBobDn(0.5);
   #### # 1 offset(22, 74) A_StartSound("weapons/sniper/boltback", lch_weapon2);
   #### # 1 offset(19, 78) Lith_A_ReloadBobDn(0.5);
   #### # 5 offset(18, 80);
   #### # 1 offset(17, 74) A_StartSound("weapons/sniper/boltforward", lch_weapon3);
   #### # 1 offset(19, 67);
   #### # 1 offset(20, 66);
   #### # 1 offset(21, 62);
   #### # 1 offset(20, 60);
   #### # 1 offset(21, 63);
   #### # 1 offset(23, 66);
   #### # 2 offset(24, 68);
   #### # 2 offset(25, 63);
   #### # 2 offset(24, 59);
   #### # 2 offset(22, 57);
   #### # 2 offset(20, 54);
   #### # 2 offset(16, 49);
   #### # 2 offset(12, 44);
   #### # 2 offset(10, 42);
   #### # 2 offset(8, 40);
   #### # 2 offset(5, 38);
   #### # 2 offset(2, 35);
   #### # 6 offset(0, 32) lith_a_setInterpolation(false);
   goto ReadySelector;
FireEmpty:
   REMS A 2 offset(3, 38);
   REMS A 1 offset(7, 40);
   REMS A 1 offset(5, 37) A_StartSound("weapons/rems/empty", lch_dryweapon);
   REMS A 1 offset(4, 34);
   REMS A 1 offset(2, 33);
   REMS A 5 offset(1, 32);
   goto ReadySelector;
}

/* EOF */
