// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Alison G. Watson. Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_FortuneProjectilePuff : Lith_BasicPuff {
   default {
      DamageType "Electric";
   }
}

class Lith_FortuneExplosionParticle : Actor {
   default {
      RenderStyle "Add";
      +NoInteraction
      +RollSprite
      +FlatSprite
   }

   override void postBeginPlay() {
      super.postBeginPlay();
      angle = fRandom[Lith_Fortune](-360, 360);
      pitch = fRandom[Lith_Fortune](-360, 360);
      roll  = fRandom[Lith_Fortune](-360, 360);
   }

   override void tick() {
      if(!isFrozen()) {
         a_fadeOut(0.05);
         scale.x += 0.05;
         scale.y += 0.05;
      }
   }

   states {
   Spawn:
      BLLT X -1;
      stop;
   }
}

class Lith_FortuneExplosion : Lith_Explosive {
   default {
      DamageType "Shrapnel";

      +NoGravity
      +ForceRadiusDmg
   }

   states {
   Spawn:
      TNT1 A 0;
      TNT1 A 0 {
         a_explode(100, 100, xf_nosplash, false, 100);
         a_quake(3, 20, 0, 640);
         for(int i = 0; i < 2; i++)
            spawn("Lith_FortuneExplosionParticle", pos);
         lith_a_explodeSound();
         return lith_a_doExplosion();
      }
      stop;
   }
}

class Lith_FortuneShot : FastProjectile {
   default {
      Radius 5;
      Height 5;
      DamageFunction 100;
      Speed 170;
   }

   states {
   Spawn:
      TNT1 A -1;
      stop;
   Death:
      TNT1 A 1 A_StartSound("weapons/fortune/hit", lch_body, attenuation: 0.2, pitch: frandom[Lith_Fortune](0.5, 1.0));
      TNT1 A 0 A_SpawnItemEx("Lith_FortuneExplosion", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
      stop;
   }
}

class Lith_FortuneProjectile : Actor {
   default {
      Height 1;
      Radius 1;
      Species "Lith_Player";
      Projectile;
      +DontHarmSpecies
      +NoClip
      -ActivateImpact
      -ActivatePCross
   }

   override void postBeginPlay() {
      super.postBeginPlay();
      a_spawnProjectile("Lith_FortuneShot", flags: CMF_TRACKOWNER|CMF_AIMDIRECTION|CMF_SAVEPITCH|CMF_ABSOLUTEPITCH, pitch: pitch);
   }

   override void tick() {
      if(!isFrozen()) {
         Lith_UTIL.stateTick(self);
      }
   }

   states {
   Spawn:
      TNT1 A 0;
      TNT1 AAAAAAAA 2 {
         A_StartSound("weapons/fortune/spark", lch_body, 0, frandom[Lith_Fortune](0.1, 0.3), 2.0, frandom[Lith_Fortune](0.5, 1.5));
         A_CustomRailgun(50, 0, "", Lith_UTIL.colorLerp("#ffffff", "#91c3ff", fRandom[Lith_Fortune](0.0, 1.0)), RGF_SILENT|RGF_EXPLICITANGLE|RGF_FULLBRIGHT|RGF_CENTERZ, 0, 50, "Lith_FortuneProjectilePuff", 0, 0, 16000, 10, 0.2, 0, spawnofs_z: 32);
      }
      stop;
   }
}

class Lith_FortuneSpark : Lith_ShockEffect {
   default {
      Projectile;
      Species "Lith_Player";
      +DontHarmSpecies
      +ForceXyBillboard
   }

   states {
   Spawn:
      ZAP1 FFEEFFEEFFEEDDCCBBCCBBAABBAA 1 {
         if(target) {
            A_Warp(AAPTR_PLAYER1, cos(target.pitch)*16, 4, 44-sin(target.pitch)*16, 0, WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
            angle = target.angle;
            pitch = target.pitch;
         }
         if(random[Lith_Fortune](0, 1) == 0) {
            A_CustomRailgun(5, 0, "", "White", RGF_SILENT|RGF_EXPLICITANGLE|RGF_FULLBRIGHT|RGF_CENTERZ, 0, 10, "Lith_ShockEffectPuff", FRandom[Lith_Fortune](-45, 45), FRandom[Lith_Fortune](-45, 45), FRandom[Lith_Fortune](100,400), 10, 0.2, 0);
         }
      }
      stop;
   }
}

class Lith_FortuneGun : Lith_DWeapon;

default {
   Lith_Weapon.SpawnType "Lith_PlasmaRiflePickup";
   Tag "$LITH_INFO_SHORT_FortuneGun";
   Weapon.SlotNumber 6;
   Weapon.SlotPriority 1;
   Weapon.UpSound "weapons/fortune/draw";
   Lith_Weapon.AmmoType "Lith_PlasmaAmmo";
   Inventory.AltHudIcon "FORTZ0";
   +Weapon.NoAutoFire
}

int m_chargeTime;

override void markPrecacheSounds() {
   super.markPrecacheSounds();
   markSound("weapons/fortune/hit");
   markSound("weapons/fortune/spark");
   markSound("weapons/fortune/fire");
   markSound("weapons/fortune/charge");
   markSound("weapons/spas/empty");
}

action(Weapon) void Lith_A_FireFortune() {
   lith_takeAmmo(350);
   A_SetBlend("#80ffd5", 0.4, 20);
   A_StartSound("weapons/fortune/fire", lch_weapon, attenuation: 0.5, pitch: frandom[Lith_Fortune](0.9, 1.05));
   lith_gunFlash();
   soundAlert(invoker.owner);
   A_Recoil(6);
   A_Quake(2, 15, 0, 128);
   let pr = A_FireProjectile("Lith_FortuneProjectile", spawnheight: -32);
   pr.pitch = self.pitch;
   Lith_A_RecoilUp(10);
   A_FireProjectile("Lith_LightProjectileSkyLong", 0);
}

action(Weapon) void lith_a_emitFortuneSpark() {
   let mo = spawn("Lith_FortuneSpark", pos);
   mo.target = self;
   A_FireProjectile("Lith_LightProjectileSkyShort", 0);
}

states(Weapon) {
Ready:
   FORT A 1 Lith_A_Ready;
   FORT A 0 {
      if(random[Lith_Fortune](0, 77) == 0 || level.time % 50 == 0) {
         A_StartSound("weapons/fortune/spark", lch_weapon3, pitch: frandom[Lith_Fortune](0.9, 1.2));
         lith_a_emitFortuneSpark();
      }
   }
   loop;

Deselect:
   FORT A 1 Lith_A_Lower(_raise_slow);
   loop;

Select:
   FORT A 1 Lith_A_Raise(_raise_slow);
   loop;

Fire:
   #### # 0 lith_jumpNoAmmo(350);
   #### # 0 {
      A_StartSound("weapons/fortune/charge", lch_weapon2);
      invoker.m_chargeTime = 4;
   }
FireCharge:
   FORT A 0 lith_a_emitFortuneSpark;
   FORT AAAAAA 1 a_overlayOffset(_psp_weapon, fRandom[Lith_Fortune](0, 4), fRandom[Lith_Fortune](32, 34), wof_interpolate);
   FORT A 0 a_jumpIf(--invoker.m_chargeTime, "FireCharge");
Fire2:
   #### # 0 lith_jumpNoAmmo(350);
   FORT A 1 offset(2, 33);
   FORT A 1 offset(2, 34);
   FORT A 0 lith_a_emitFortuneSpark;
   FORT A 1 offset(5, 37);
   FORT B 2 bright offset(1, 32) Lith_A_FireFortune;
   FORT C 2 offset(2, 34);
   FORT A 0 lith_a_emitFortuneSpark;
   FORT C 1 offset(-1, 32);
   FORT A 3 offset(22, 64);
   FORT A 3 offset(19, 60);
   FORT A 3 offset(16, 55);
   FORT A 2 offset(15, 52);
   FORT A 2 offset(14, 50);
   FORT A 2 offset(13, 48);
   FORT A 1 offset(12, 44);
   FORT A 1 offset(11, 43);
   FORT A 1 offset(10, 42);
   FORT A 1 offset(8, 41);
   FORT A 1 offset(7, 40);
   FORT A 2 offset(6, 38);
   FORT AAA 1 offset(5, 37) A_ReFire("Fire2");
   FORT AAAA 1 offset(4, 36) a_weaponReady(WRF_NOBOB);
   FORT AAAAA 1 offset(3, 35) a_weaponReady(WRF_NOBOB);
   FORT AAAAAA 1 offset(2, 34) a_weaponReady(WRF_NOBOB);
   FORT AAAAAAA 1 offset(1, 33) a_weaponReady(WRF_NOBOB);
   FORT A 0 a_startSound("weapons/fortune/load", lch_dryweapon);
   FORT AAAAAAAA 1 offset(1, 32) a_weaponReady(WRF_NOBOB);
   goto ReadySelector;
FireEmpty:
   FORT A 2 offset(3, 38);
   FORT A 1 offset(7, 40);
   FORT A 1 offset(5, 37) A_StartSound("weapons/spas/empty", lch_dryweapon);
   FORT A 1 offset(4, 34);
   FORT A 1 offset(2, 33);
   FORT A 5 offset(1, 32);
   goto ReadySelector;
}

/* EOF */
